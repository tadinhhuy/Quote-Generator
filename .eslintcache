[{"D:\\Pet Project\\quote-generator\\src\\index.tsx":"1","D:\\Pet Project\\quote-generator\\src\\reportWebVitals.ts":"2","D:\\Pet Project\\quote-generator\\src\\App.tsx":"3","D:\\Pet Project\\quote-generator\\src\\pages\\QuoteGenerator\\index.tsx":"4","D:\\Pet Project\\quote-generator\\src\\components\\Quote\\item\\index.tsx":"5","D:\\Pet Project\\quote-generator\\src\\helpers\\form.js":"6","D:\\Pet Project\\quote-generator\\src\\services\\quotes.ts":"7","D:\\Pet Project\\quote-generator\\src\\constants\\endpoints.js":"8","D:\\Pet Project\\quote-generator\\src\\services\\axios.ts":"9","D:\\Pet Project\\quote-generator\\src\\router\\index.ts":"10","D:\\Pet Project\\quote-generator\\src\\pages\\auth\\login\\index.tsx":"11"},{"size":500,"mtime":1612176602799,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":608,"mtime":1615174668448,"results":"15","hashOfConfig":"13"},{"size":2276,"mtime":1614758165839,"results":"16","hashOfConfig":"13"},{"size":1143,"mtime":1614248552463,"results":"17","hashOfConfig":"13"},{"size":2323,"mtime":1613633666248,"results":"18","hashOfConfig":"13"},{"size":338,"mtime":1613727759282,"results":"19","hashOfConfig":"13"},{"size":203,"mtime":1613633699494,"results":"20","hashOfConfig":"13"},{"size":995,"mtime":1613706997023,"results":"21","hashOfConfig":"13"},{"size":287,"mtime":1614848571972,"results":"22","hashOfConfig":"13"},{"size":456,"mtime":1615431895174,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"khwo2e",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Pet Project\\quote-generator\\src\\index.tsx",[],["49","50"],"D:\\Pet Project\\quote-generator\\src\\reportWebVitals.ts",[],"D:\\Pet Project\\quote-generator\\src\\App.tsx",[],"D:\\Pet Project\\quote-generator\\src\\pages\\QuoteGenerator\\index.tsx",["51"],"import { useState, useEffect, useRef } from 'react';\r\nimport QuoteItem from '../../components/Quote/item';\r\nimport './style.scss';\r\nimport { getAllQuotes } from '../../services/quotes';\r\n\r\nconst QuoteGenerator: React.FC = () => {\r\n  const [quotesList, setQuotesList] = useState<object[]>([]);\r\n\r\n  const [quote, setQuote] = useState<object>({});\r\n\r\n  const [color, setColor] = useState<string>('');\r\n\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  const quoteRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    handleCallApi();\r\n  }, []);\r\n\r\n  const getRandomColor = (): string => {\r\n    const LETTERS = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += LETTERS[~~(Math.random() * LETTERS.length)];\r\n    }\r\n    return color;\r\n  };\r\n\r\n  const getRandomQuote = (): number => {\r\n    return ~~(Math.random() * quotesList.length);\r\n  };\r\n\r\n  const handleCallApi = async (): Promise<void> => {\r\n    try {\r\n      const quotes: object[] = await getAllQuotes();\r\n      handleRandomQuote(quotes);\r\n      setQuotesList(quotes);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRandomQuote = (quoteParam?: any): void => {\r\n    quoteRef.current?.animate(\r\n      [\r\n        { opacity: 0, transition: 500 },\r\n        { opacity: 1, transition: 500 },\r\n      ],\r\n      {\r\n        duration: 1500,\r\n        easing: 'ease-in-out',\r\n      }\r\n    );\r\n\r\n    const newColor: string = getRandomColor();\r\n    const indexQuote: number = getRandomQuote();\r\n\r\n    const isQuotesListEmpty: boolean =\r\n      quotesList !== undefined && quotesList.length === 0;\r\n\r\n    const quoteObj: object = isQuotesListEmpty\r\n      ? quoteParam[indexQuote]\r\n      : quotesList[indexQuote];\r\n\r\n    setQuote(quoteObj);\r\n    setColor(newColor);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ backgroundColor: color }} className=\"quotes__container\">\r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <QuoteItem\r\n            quote={quote}\r\n            getNewQuote={handleRandomQuote}\r\n            color={color}\r\n            quoteRef={quoteRef}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuoteGenerator;\r\n","D:\\Pet Project\\quote-generator\\src\\components\\Quote\\item\\index.tsx",[],"D:\\Pet Project\\quote-generator\\src\\helpers\\form.js",[],["52","53"],"D:\\Pet Project\\quote-generator\\src\\services\\quotes.ts",[],"D:\\Pet Project\\quote-generator\\src\\constants\\endpoints.js",[],"D:\\Pet Project\\quote-generator\\src\\services\\axios.ts",[],"D:\\Pet Project\\quote-generator\\src\\router\\index.ts",[],"D:\\Pet Project\\quote-generator\\src\\pages\\auth\\login\\index.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":19,"column":6,"nodeType":"60","endLine":19,"endColumn":8,"suggestions":"61"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCallApi'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [handleCallApi]",{"range":"67","text":"68"},[566,568],"[handleCallApi]"]